name: AssaultCube Web Demo (Singleplayer)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: 3.1.64

    - name: Verify emcc
      run: emcc -v

    - name: Prepare demo patches
      run: |
        # Stub networking init so sockets are not required
        echo -e "\n#ifdef __EMSCRIPTEN__\nvoid initnetwork() {}\n#endif\n" >> source/src/clientgame.cpp

        # Include Emscripten header in main.cpp
        echo -e "\n#ifdef __EMSCRIPTEN__\n#include <emscripten.h>\n#endif\n" >> source/src/main.cpp

    - name: Build AssaultCube to WebAssembly (singleplayer-only)
      run: |
        mkdir -p web-build
        emcc -I source/src \
        -I $EMSDK/upstream/emscripten/cache/sysroot/include \
        source/src/main.cpp \
        source/src/clientgame.cpp \
        source/src/console.cpp \
        -O3 -s ASSERTIONS=0 -s ALLOW_MEMORY_GROWTH=1 \
        -s MODULARIZE=1 -s EXPORT_ES6=1 -s ENVIRONMENT=web \
        -s SINGLE_FILE=1 \
        -s USE_SDL=2 \
        -s USE_SDL_IMAGE=2 \
        -lz \
        -o web-build/assaultcube.js

    - name: Create minimal HTML loader
      run: |
        cat > web-build/index.html <<'EOF'
        <!doctype html>
        <html>
        <head><meta charset="utf-8"/><title>AssaultCube Web Demo</title></head>
        <body style="margin:0;overflow:hidden">
          <canvas id="canvas" oncontextmenu="event.preventDefault()"></canvas>
          <script type="module">
            import createModule from "./assaultcube.js";
            createModule().then(Module => {
              console.log("AssaultCube Web Demo ready", Module);
            });
          </script>
        </body>
        </html>
        EOF

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: assaultcube-web-demo
        path: web-build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: assaultcube-web-demo
        path: ./public

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
